------------------------------------------------------------------------
r197 | andrew | 2025-01-19 23:00:04 +1100 (Sun, 19 Jan 2025) | 2 lines

- had another attempt at fixing stuck keys in when playing XT version in martypc
- fixed fileSelector when there are no files to load.
------------------------------------------------------------------------
r196 | andrew | 2025-01-09 10:09:24 +1100 (Thu, 09 Jan 2025) | 5 lines

Removing and cleaning up some files
- I'm splitting some code off into a new project - gedit - which will eventually replace the current graphics tool chain
  So I've removed the exe and source for the packer tool, gedit and conversion tools as they will be a part of the new
  repo.
- I found some BGI files in the git-repo so I've cleaned them up there.
------------------------------------------------------------------------
r195 | andrew | 2025-01-07 12:29:22 +1100 (Tue, 07 Jan 2025) | 4 lines

I made a new file selection mechanism for the level editor that is a little
more user friendly.


------------------------------------------------------------------------
r194 | andrew | 2024-10-15 22:17:05 +1100 (Tue, 15 Oct 2024) | 5 lines

Found that the initial volume setting for adlib audio was initialised to zero when no config file present.

Made some small changes to fix the initial volume state and to allow for finer control of the volume level.


------------------------------------------------------------------------
r193 | andrew | 2024-08-22 21:38:08 +1000 (Thu, 22 Aug 2024) | 4 lines

I made some more minor optimisations and changed the XT build to disable pitdbl by default.
I added an STI in the music interrupt in the hope this would make the keyboard behave better on martyPC

Sadly didn't make much of an impact on performance or the keyboard issues.
------------------------------------------------------------------------
r192 | andrew | 2024-08-18 23:08:12 +1000 (Sun, 18 Aug 2024) | 4 lines

Two changes for performance.

- Added a simple scaling mechanism to reduce the distance enemies can be seen if the game is struggling to keep up. applies only to machines with 8088/8086
- Made minor change to CGA and EGA graphics making screen ofset calculation faster with some assembly.
------------------------------------------------------------------------
r191 | andrew | 2024-06-02 17:38:09 +1000 (Sun, 02 Jun 2024) | 23 lines

Addressed a few bugs and attempted to fix issue with keyboard.

- fixed timer issue where if you paused the game for a significant amount of time sometimes it would stall game movement after the pause.
- fixed the check for being able to write to a file not working if the file didn't exist.

The keyboard issue is a bit more complex and I'm not sure if this solves it.
From testing some machines would sometimes not register a key_up event causing game controls to stick. It's not consistent, with different results depending on machine type.
- with martyPC the keys would stick 
- with 86Box the keys would stick under some configurations but not others, there isn't a consistent pattern other than more modern configurations being less likely to suffer the problem.
- with the book 8088 - it only suffered from stuck keys if the adlib sound was turned on (probably because it takes up more interrupt time that PC speaker and thus increases the likely hood)
- with Microbyte 386sx PC - never gets stuck keys - with either set of code.

I've implemented a new keyhandler that only applies to the XT version of the game.
- it seems to solve the problem on martyPC which is encouraging
- solves the problem on some 86Box configurations and makes it worse on others (how?!) this is kinda concerning.
- works fine on the microbyte PC and Dosbox.
- no change on the book 8088, the XT version is fine (as it only has PC speaker) and the normal version has the issue when using adlib sound but not otherwise.

The new code isn't without issue, it does not call the BIOS handler so it doesn't reboot when CTRL+ALT+DEL is pressed, and the caplock, numlock and scroll lock keys are not handled.
It has the benefit however of allowing some keys to be used in the game (such as shift, alt and ctrl)

I have more experimentation to do, such as enabling interrupts during sound processing to see if that helps as it does on the book 8088.

------------------------------------------------------------------------
r190 | andrew | 2024-05-19 18:21:59 +1000 (Sun, 19 May 2024) | 3 lines

I wrote a small section of code to check if a file can be written to and have implemented checks for saving the config file and for writing a save game. I decided to do this after running the game in martyPC with the disk image write protected. The run time error message would have left a player in the dark.

I've also changed how colours are selected for the UI. mostly as CGA requires the colours used be mapped to one of three usable colours. I made an array for the first 16 colours as I use those for the UI, which stores which actual colour to use based on my intention. I've changed the UI code where needed to use the new mapping array.
------------------------------------------------------------------------
r189 | andrew | 2024-04-18 23:12:27 +1000 (Thu, 18 Apr 2024) | 4 lines

Made some more adjustments to the hard difficulty level.
I reduced the hit points from 2x to 1.5x the normal to reduce the bullet sponginess that was very much a thing. Insane difficulty retains the 2x hitpoints.

hard and insane now get more ammunition from grenade boxes and lightning bolt packs, to reflect the greater number of shots required to kill the baddies.
------------------------------------------------------------------------
r188 | andrew | 2024-04-15 23:02:43 +1000 (Mon, 15 Apr 2024) | 10 lines

I have changed the default settings when bob.cfg is missing and removed bob.cfg from the archives.
The default settings now set VGA with sound on medium difficulty at normal speed. I've set the custom keys to sensible defaults.
There are different settings for the graphics mode and keys for the XT build to account for the differing hardware support.

I've modified the difficulty mechanism a little. I've removed variation in the hurt cool down for the player, it now takes
 the same number of ticks before you can be hurt again for all difficulty settings (5 ticks). I've modified the shot delay
 for monsters to be 3 ticks for most difficulty modes and 5 for easy.

Hopefully this should make the hard setting a bit more fair, the increased hit points in most cases are enough to make things
 more difficult.
------------------------------------------------------------------------
r187 | andrew | 2024-04-08 23:51:20 +1000 (Mon, 08 Apr 2024) | 4 lines

Added feature to level editor where the map function has a count of the number of monsters and the total value of the treasures.

This will make it easier to balance the different episodes (when I make more of them) to have comparable amounts of treasures
 and monsters overall to keep the maximum scores within the same ball park.
------------------------------------------------------------------------
r186 | andrew | 2024-04-07 13:24:49 +1000 (Sun, 07 Apr 2024) | 16 lines

I've restructured the conditional defines system to allow for more flexible build configurations

essentially each graphics mode has it's own define eg. CGA, VGA etc

To avoid having to write a long command line for each hardware configuration I've created
the new file DEFINES.PAS to store configurations for build types. In that file you'll find build configurations
for different build types of which there are currently three (XT, editor and general)

DEFINES.PAS is included in files that use conditional defines to configure the hardware support.

Functionally this doesn't change much for the current builds as this change maintains the status quo. Although the executables are very slightly larger.

The upside of this change is that it will be easy to change what hardware support is available in a build, to create new
configurations, and to add new supported hardware to the different builds. For instance if I add hercules support it will be easy to pick which builds it applies to. Or if I create a tandy build I'll be able to select hardware support for it easier.

This change affects the graphics support mostly, I am considering extending this change to the sound hardware as well. I presently only have pc speaker and adlib, but if I add more in future (such as tandy) I will have the same needs as the graphics support.
------------------------------------------------------------------------
r185 | andrew | 2024-04-04 23:45:55 +1100 (Thu, 04 Apr 2024) | 2 lines

changed keyboard interrupt to limit the number of entries in the key buffer. This
should solve the problem with slow machines having keyboard over-runs and pausing to make a noise.
------------------------------------------------------------------------
r184 | andrew | 2024-03-27 18:20:58 +1100 (Wed, 27 Mar 2024) | 6 lines

I've updated the Github script to copy the svn commit message and to make commits on a daily basis (only if something was commited)

This change fixes the settings screen, it was slow to interact with as it was drawing all the options every time.
Now a configuration item is only drawn on screen if it is selected or if a refresh flag is set.

This should speed up the settings screen on slow computers.
------------------------------------------------------------------------
r183 | andrew | 2024-01-21 22:24:11 +1100 (Sun, 21 Jan 2024) | 2 lines

I've added the hardware info screen as a menu item to the settings screen.
So end users can look at the details such as available memory.
------------------------------------------------------------------------
r182 | andrew | 2024-01-21 16:02:56 +1100 (Sun, 21 Jan 2024) | 9 lines

Added functions to keyboard unit to read from the BIOS key buffer to replace those in the CRT unit.
This was so I could remove the CRT unit from the game and save a small amount of memory.

I still need to address the keyboard buffer overflow that can happen on the slowest of machines
under some circumstances.

I've also updated the readme a little more.


------------------------------------------------------------------------
r181 | andrew | 2024-01-21 01:30:53 +1100 (Sun, 21 Jan 2024) | 2 lines

Corrected the choice of using a system memory backbuffer so that systems with low memory are more likely to work.
It is possible to run with just under 200k conventional free (not recommended though)
------------------------------------------------------------------------
r180 | andrew | 2024-01-14 22:50:42 +1100 (Sun, 14 Jan 2024) | 3 lines

Corrected behaviour when changing screens down, now it waits until you run out of upwards jump force (in case you were jumping up)

also fixed some graphic issues in the level editor. added a few clearviewport commands where they were missing.
------------------------------------------------------------------------
r179 | andrew | 2024-01-10 21:39:30 +1100 (Wed, 10 Jan 2024) | 1 line

Fixed a minor behavioural bug when transitioning up a screen.
------------------------------------------------------------------------
r178 | andrew | 2024-01-08 18:45:19 +1100 (Mon, 08 Jan 2024) | 2 lines

update to readme for binary release.

------------------------------------------------------------------------
r177 | andrew | 2024-01-03 16:55:19 +1100 (Wed, 03 Jan 2024) | 3 lines

I've re-added EGA pages and implemented a similar concept for CGA and VGA using system memory back buffer that's already in the hardware specific units..
Information for this data is now shown on the secret debug screen 

------------------------------------------------------------------------
r176 | andrew | 2023-12-24 12:02:09 +1100 (Sun, 24 Dec 2023) | 2 lines

re-wrote EGA line drawing in assembly - seems to work well, will need to do some performance testing.

------------------------------------------------------------------------
r175 | andrew | 2023-11-27 22:41:08 +1100 (Mon, 27 Nov 2023) | 1 line

Had a minor problem in the CGA detection code (used incorrect port), this has been fixed and tested under emulation.
------------------------------------------------------------------------
r174 | andrew | 2023-11-26 15:41:53 +1100 (Sun, 26 Nov 2023) | 3 lines

Implemented line drawing in VESA mode using x86 assembly - seems to work ok.

and added video card detection - so it doesn't attempt to use graphics mode that doesn't work on the machine.
------------------------------------------------------------------------
r173 | andrew | 2023-07-12 23:36:47 +1000 (Wed, 12 Jul 2023) | 4 lines

Optimised line drawing in VGA.pas as well, partly because it's an easy win.

VGA should be significantly faster on low end hardware than CGA.

------------------------------------------------------------------------
r172 | andrew | 2023-07-12 16:27:15 +1000 (Wed, 12 Jul 2023) | 7 lines

I found that line drawing is a slow point in the text drawing for CGA.
I've re-written the CGA line drawing in pure assembly, with testing it has proved to
be significantly faster than my old code (unsurprisingly)

This should hopefully improve the game performance on XT machines when any text
is updated during gameplay.

------------------------------------------------------------------------
r171 | andrew | 2023-04-26 23:45:54 +1000 (Wed, 26 Apr 2023) | 4 lines

Converted the inner most data copy routine to assembly within the putImage and putImageXOR ( copyToScreen )

Seems to have significantly increased performance of image copying, by about 3 times!
more optimisations to follow!
------------------------------------------------------------------------
r170 | andrew | 2023-04-12 23:56:24 +1000 (Wed, 12 Apr 2023) | 4 lines

I think I found the last glitch in the EGA image code. Essentially the trailing byte of pixel data could need to be written over
two bytes under specific conditions. I didn't take this into account, and some of the pixels could be cut off if there wasn't room in the first byte

This solution isn't elegant there is probably room to make it better.
------------------------------------------------------------------------
r169 | andrew | 2023-03-24 23:51:16 +1100 (Fri, 24 Mar 2023) | 4 lines

Bug fix for line drawing (missing start pixel under certain conditions)
and bug fix with trailing byte mask on image drawing.

Still have a bug in the image drawing I have not resolved.
------------------------------------------------------------------------
r168 | andrew | 2023-03-17 00:33:27 +1100 (Fri, 17 Mar 2023) | 2 lines

Fixed line drawing where the first co-ordinate is closer to the bottom left than the second co-ord.
One visual glitch down!
------------------------------------------------------------------------
r167 | andrew | 2023-03-16 08:56:22 +1100 (Thu, 16 Mar 2023) | 4 lines

worked on the EGA unit, have added all the functions implemented in pascal. They are still buggy and don't display properly.
Getting and Drawing images have visual and memory issues (where getting an image slightly overruns the buffer!!! Also display of images misses part of the right hand side.) lines of small length do not draw, and narrow filledboxes don't draw under some circumstances.

This still needs quite a bit more work.
------------------------------------------------------------------------
r166 | andrew | 2023-01-31 22:53:24 +1100 (Tue, 31 Jan 2023) | 6 lines

Starting work on the EGA code module.
- Only a few graphics functions are implemented, line drawing, pixels, circles and filled boxes
- What I have written is in pure pascal and has not been optimised yet - only filled boxes is currently faster than BGI
- still have image operations left to do.

The BGI code for 16 colour EGA graphics is pretty darn fast! I imagine it will be difficult for me to even achieve speed parity for some operations. Fortunately I believe that my code will eventually be faster for images and filled boxes, but that is yet to be seen. 
------------------------------------------------------------------------
r165 | andrew | 2023-01-11 09:04:46 +1100 (Wed, 11 Jan 2023) | 1 line

Fixed bug in progress bar for VGA, the function which copies from the back buffer wasn't disabling itself when the buffer isn't created. Affects machines with low memory and the conversion utilities.
------------------------------------------------------------------------
r164 | andrew | 2023-01-10 23:20:27 +1100 (Tue, 10 Jan 2023) | 2 lines

I've added a progress bar for when the game is loading the graphics, this is mostly to provide feedback on machines that are slow
to load the graphics so you know it has not crashed.
------------------------------------------------------------------------
r163 | andrew | 2022-12-31 14:11:11 +1100 (Sat, 31 Dec 2022) | 4 lines

fixed issue in editing utility. Using cheat menu while testing a level would crash the editor in high resolution mode 
because it couldn't alocate a large enough space to save the screen area to memory.
Changed the editor so that it redraws the screen rather than saving the displayed area to the heap. 

------------------------------------------------------------------------
r162 | andrew | 2022-12-30 16:58:28 +1100 (Fri, 30 Dec 2022) | 4 lines

Modified ega and cga conversion utilities to no longer use the BGI.
- debug information that was displayed isn't any more - perhaps need to re-add it in a reasonable way.


------------------------------------------------------------------------
r161 | andrew | 2022-11-03 22:30:10 +1100 (Thu, 03 Nov 2022) | 1 line

Fixed exit procedure on Vesa unit, not sure how I missed this one.
------------------------------------------------------------------------
r160 | andrew | 2022-10-28 13:21:45 +1100 (Fri, 28 Oct 2022) | 2 lines

Updated the readme a bit to reflect the current state of things.

------------------------------------------------------------------------
r159 | andrew | 2022-10-28 13:00:11 +1100 (Fri, 28 Oct 2022) | 3 lines

removing un-needed graphics for a music tool I never used or finished and changed the default config to standard vga graphics.


------------------------------------------------------------------------
r158 | andrew | 2022-10-16 15:56:17 +1100 (Sun, 16 Oct 2022) | 1 line

Upgraded to VESA to allow it to function with more graphic cards. It can now handle the window size and granule size being different. There is still some more work to do, and some cards may require a VBE TSR driver such as univbe.
------------------------------------------------------------------------
r157 | andrew | 2022-10-14 22:30:43 +1100 (Fri, 14 Oct 2022) | 3 lines

Completion of the XOR drawing in the VESA library. Also fixed some bugs.
The game seems to play ok in high resolution mode now.
The level editor has a problem with saving and restoring screen area as it's bigger than a 64k image so I'll need to work around that.
------------------------------------------------------------------------
r156 | andrew | 2022-10-07 09:02:09 +1100 (Fri, 07 Oct 2022) | 4 lines

Adding VESA support into the game, it's still experimental and there are some bugs to squish.

image routines don't seem to switch bank correctly when it's required part-way through a row.
causes issues with drawing in general.
------------------------------------------------------------------------
r155 | andrew | 2022-07-31 23:51:38 +1000 (Sun, 31 Jul 2022) | 3 lines

Added a build for the XT executable, so a special download can be made for it.


------------------------------------------------------------------------
r154 | andrew | 2022-06-26 01:56:01 +1000 (Sun, 26 Jun 2022) | 6 lines

Fixed a serious bug where the game would cause a crash in the next bit of software run (whatever it is)
It was caused by incorrectly coding the exit procedures in the graphics libraries. Basically once an exitproc is in the chain it
should not remove itself before the program termination process, otherwise it will break the chain and some exit procedure won't be run which will cause problems for the next program to run. Especially if interrupts are left in place.

This commit fixes that bug by remaking the exit procedures for CGA, VGA and VESA (even though it's not used yet)
Some other minor changes are included but aren't significant.
------------------------------------------------------------------------
r153 | andrew | 2022-06-21 16:10:18 +1000 (Tue, 21 Jun 2022) | 7 lines

Added compiler conditional definition that can be set to compile for less hardware support.
XT - changes a message to reflect being compile for a different target (in future will do more)
CGA - compiles in only CGA graphics support.
noAdlib - removes the adlib sound support.

add the appropriate /D to the compiler command line for the desired results, probably also a good idea
to add /B to build all files.
------------------------------------------------------------------------
r152 | andrew | 2022-06-13 15:45:50 +1000 (Mon, 13 Jun 2022) | 4 lines

Some work on the VESA unit.
- rewriting the filled box routine in ASM, seems to have a bug around the vesa granule/window edge.


------------------------------------------------------------------------
r151 | andrew | 2022-06-07 23:44:51 +1000 (Tue, 07 Jun 2022) | 6 lines

Some behaviour correction for projectiles and a minor change to VGA.PAS to reduce stack use.
Most changes were in VESA.PAS where I've been working on the VESA graphics implementation.
- most Functions work in some capacity except the XOR image drawing (XOR needs to be implemented)
- filledBox needs to be re-written in assembly, partly to fix drawing over the window boundaries
- Line drawing is using putPixel, it needs to be changed to write directly to memory instead for speed.
It's not yet ready for including as a valid graphics mode, but shouldn't take much longer.
------------------------------------------------------------------------
r150 | andrew | 2022-06-05 21:12:41 +1000 (Sun, 05 Jun 2022) | 3 lines

Added VESA unit, which is presently incomplete. Trying to figure out the best way of drawing images to the screen near the borders of the windows to video memory.


------------------------------------------------------------------------
r149 | andrew | 2022-04-06 12:24:01 +1000 (Wed, 06 Apr 2022) | 1 line

Made some minor changes to correct the behaviour of grenades, elevators and the status bar (after exiting the menu)
------------------------------------------------------------------------
r148 | andrew | 2022-04-06 00:08:43 +1000 (Wed, 06 Apr 2022) | 6 lines

Significant performance increase on XT machines...
- mostly due to the status bar update code. It was doing some unnecessary drawing and did some in a slow way.
  I've improved it's efficiency and performance on slower machines has leapt forward!
- implemented some code in gcommon in assembly as it is called frequently.

Still need to improve the cga line drawing speed, perhaps also need to tweak the distances in which enemies appear and disappear on low performance machines, and perhaps also the number of bullets. (and shooting conditions)
------------------------------------------------------------------------
r147 | andrew | 2022-04-01 00:10:40 +1100 (Fri, 01 Apr 2022) | 4 lines

- Tried to make bfont faster by precomputing some commonly used values.
- some minor logic changes in engine.pas
- attempt at solving keybuffer overflow noise on slow machines
- fixed a bug in VGA get image, where it could end up getting incorrect data.
------------------------------------------------------------------------
r146 | andrew | 2022-03-29 22:44:42 +1100 (Tue, 29 Mar 2022) | 3 lines

Simplified the keyboard unit to be smaller and faster.
- only problem is that on slow systems the buffer can overflow, countermeasures to this (found in swag and from Jim) didn't seem 
  to help or only caused _worse_ stuff like a stack overflow. Need to figure out what is going on.
------------------------------------------------------------------------
r145 | andrew | 2022-03-28 21:42:48 +1100 (Mon, 28 Mar 2022) | 3 lines

Did more game logic simplification
- simplified the player movement - definitely needed refactoring
- minor changes to VGA.PAS and bobgraph.pas need to do further optimisations to the graphics systems.
------------------------------------------------------------------------
r144 | andrew | 2022-03-27 21:38:06 +1100 (Sun, 27 Mar 2022) | 4 lines

finished porting the enemies and bullets to use the new moveutil functions
- need to port the player to use it! Which is a little more complicated.


------------------------------------------------------------------------
r143 | andrew | 2022-03-27 13:17:16 +1100 (Sun, 27 Mar 2022) | 3 lines

started work on game logic to make it easier to read and hopefully faster.
- created new unit to handle code for object movement. Part way through porting code in engine.

------------------------------------------------------------------------
r142 | andrew | 2022-03-20 12:29:24 +1100 (Sun, 20 Mar 2022) | 14 lines

Massive debug and coding session!
- added font scaling to bfont - so the title screen looks correct.
- reverted and modified a change in bmenu, so that future graphics modes (ega,vesa) will look correct
- fixed a bug with bobgraph where I was using an incorrect coordinate for getimage which caused crashes.
- after having fixed the serious crashing bugs reinstated turning off stack and range checking.
- changed many of the parameters in VGA and CGA from integer to word.
- Fixed serious bugs in CGA.pas
  - filledBox had a bug where it would fill the entire screen (and more memory) if the box met certain requirements - Fixed
  - corrected issues with font rendering by masking the colour to $3 so that we don't accidentally draw to other pixels.
  - removed BGI files as they are no longer needed! Disk space and memory savings hurray!

Game seems to work well in both the CGA and VGA modes now, and I haven't found any more serious bugs.
- need to re-introduce EGA and VESA graphics modes.
- might do some conditional define magic to make it possible to compile a version specific to XT machines to save memory.
------------------------------------------------------------------------
r141 | andrew | 2022-03-19 13:31:35 +1100 (Sat, 19 Mar 2022) | 12 lines

Initial work on converting graphics code to using new libraries.
 -Bobgraph, Bfont and pgs form the core that everything else should use.
 -CGA and VGA are the device specific code for drawing. Will implement EGA and VESA later.

Fixed a some bugs
- putimage in CGA would draw incorrectly on odd lines. corrected the bank switching to account for this.

Have had numerous bugs to fix, however the editor and the game *mostly* work.
Bugs remaining.
- CGA filledBox seems to fill entire screen when a narrow box is specified. probably an overflow error.
- The code that saves and restores a large screen segment seems to cause crashes, and doesn't draw correctly.
   I suspect the put/get code doesn't handle larger images well. Will have to fire up a debugger!
------------------------------------------------------------------------
r140 | andrew | 2022-03-17 22:43:11 +1100 (Thu, 17 Mar 2022) | 4 lines

changed bmenu to use new font unit and added font loading into the init section of bobtest

Only change required for parity with BGI text drawing is text scaling. I am only typically using sizes 4 and 8.
The only place where a larger scale is really used is the title screen.
------------------------------------------------------------------------
r139 | andrew | 2022-03-16 23:51:42 +1100 (Wed, 16 Mar 2022) | 4 lines

Font unit mostly debugged and working, without font scaling.
Scaling only really applies to the title screen, so it's not critical ... yet.

bfleu is actually working with the stroked font. Which makes the font a requirement for it now.
------------------------------------------------------------------------
r138 | andrew | 2022-03-15 09:58:57 +1100 (Tue, 15 Mar 2022) | 5 lines

Some minor text changes in the README.txt

Also work on creating the font unit that will replace the BGI stroked font drawing.
It needs debugging and figuring out why it doesn't quite work yet. probably isn't loading the font data correctly at a guess.
Also drawing code might need work.
------------------------------------------------------------------------
r137 | andrew | 2022-02-09 10:32:13 +1100 (Wed, 09 Feb 2022) | 8 lines

Some more optimisation of CGA.PAS

Image operations now work first on one CGA memory bank, then the other.
This reduces the amount of calulations required for the ofset between rows.
But expands the code signifcantly. It has also meant I could remove the
push cx as I have more register space.


------------------------------------------------------------------------
r136 | andrew | 2022-01-17 00:28:44 +1100 (Mon, 17 Jan 2022) | 3 lines

Added the functionality for CGA palettes, tested on emulation. Hopefully works correctly on real hardware.


------------------------------------------------------------------------
r135 | andrew | 2022-01-15 12:03:32 +1100 (Sat, 15 Jan 2022) | 13 lines

More work on the CGA unit
- implemented drawing with XOR
- optimised the standard draw, changed calculations to bit twiddling where I can

Made larger change to image storage, storing 4 copies of the image pre-shifted bitwise to positions
ready for different x and $3 values.
Cons:
   takes up loads more memory 164 versus 34
Pros:
   significantly faster

might be a problem on low memory systems, but will make it more likely this will work on an XT.

------------------------------------------------------------------------
r134 | andrew | 2022-01-12 23:37:54 +1100 (Wed, 12 Jan 2022) | 13 lines

More work on the CGA routines.
- created the putImage routine in assembly - seems faster than BGI on real hardware (386sx)
  will test on 86Box for lower spec machines

might not be the optimal way to draw to CGA. I basically shift the buffer to the right pixel at
draw time which costs time. I could store pre-shifted pixels, but this would quadruple the amount
of image memory per image.
for 10x10 image
BGI memory usage 46
CGA unit usage now 34
potential CGA unit usage 164 .... yikes even more than higher resolutions.


------------------------------------------------------------------------
r133 | andrew | 2022-01-09 23:38:40 +1100 (Sun, 09 Jan 2022) | 3 lines

working on CGA.PAS - added getimage function. written purely in pascal as it doesn't require high performance.


------------------------------------------------------------------------
r132 | andrew | 2022-01-08 15:21:35 +1100 (Sat, 08 Jan 2022) | 3 lines

Worked on CGA.PAS. Implemented filled boxes using assembly language. Been tested and looking good so far.


------------------------------------------------------------------------
r131 | andrew | 2022-01-03 19:02:50 +1100 (Mon, 03 Jan 2022) | 5 lines

added CGA and VGA units along with their common graphic utility functions.
VGA is mostly done - One minor bug in circle routine
CGA is partly implemented.


------------------------------------------------------------------------
r130 | andrew | 2021-11-13 16:49:02 +1100 (Sat, 13 Nov 2021) | 7 lines

Some logic simplification and minor changes - finding it hard to find performance increases!
Now will run ok on a 8086 @ 8Mhz so that's an improvement!
- added checkTimer so we can check that the timing mechanism is ready before returning/starting to use the game engine.pas
- minor logic improvement in bobgraph collision code.
- changed pitdbl to only acknowledge interrupt when not running the old int08 handler (as it would do it and I don't want to double up)
- removed minor redundant code from map.pas
- simplified some logic for monster and player movement.
------------------------------------------------------------------------
r129 | andrew | 2021-11-06 14:02:28 +1100 (Sat, 06 Nov 2021) | 6 lines

Some bug fixes and optimising/shrinking interrupt code
- made the keyboard interrupt shorter - but still retained ability to distinguish extended keycodes from normal ones. Will need to think about how I want to go forward with this one.
- Shortened the fmplayer interrupt and saved some memory (removed waiting buffer, riff funcation and associated code) interrupt is substantially shorter.
- fixed bug where loading an episode, then loading an episode using a compressed episode file would cause a crash.
- fixed bug in synthint where an array index could end up out of bounds.
- fixed range error in quadtree by changing data type.
------------------------------------------------------------------------
r128 | andrew | 2021-11-04 00:47:47 +1100 (Thu, 04 Nov 2021) | 3 lines

Some further optimisation to the game logic.
- projectiles now only call checkmonsters once (much more sensible!)
- changed the checkpickup function to use a case block as those seem to be a bit better.
------------------------------------------------------------------------
r127 | andrew | 2021-11-02 23:30:18 +1100 (Tue, 02 Nov 2021) | 7 lines

made an attempt at optimising for 8086/8088 class machines - have made an improvement, but still needs more work!
- added detection of 286+ processor - for deciding how to calculate distance in monsterob.move
- lots of modification to game logic in engine.pas, to use new quadtree unit. Also optimised some un-needed logic out and tidied up.
- made bobgraph use shl rather than multiplies for correcting for screen mode
- distance calculation now uses the word sqrt if longints are not required.
- added quadtree unit, to hopefully make collision detection faster.

------------------------------------------------------------------------
r126 | andrew | 2021-10-30 17:21:41 +1100 (Sat, 30 Oct 2021) | 10 lines

Made some major changes in an attempt to improve performance for XT class machines.
* first made it possible to run on XT machines by compiling for 8086 instead of 80286
* Changed pitdbl to be able to keep time by number of ticks for timing through out the game. Can now select how much faster
  than standard PIT speed.
* Modified game engine to use new timing mechanism in pitdbl
* Modified bconfig to store new timing information (number of ticks * 2)
* Modified bmenu to use new timing mechanism
* Removed old time.pas as it's no longer needed.

This improved the performance by more than I was expecting, a turbo XT seems playable with some slow-down where there's a busy area. It's probably not the best experience there, but it does work.
------------------------------------------------------------------------
r125 | andrew | 2021-10-29 13:54:27 +1100 (Fri, 29 Oct 2021) | 3 lines

Added a readme to the source directory as basic documentation for the zip.


------------------------------------------------------------------------
r124 | andrew | 2021-10-19 01:20:16 +1100 (Tue, 19 Oct 2021) | 5 lines

* Added mummy creature for the tomb episode from qbasic, which may also be useful in some dungeons of the jungle.
* imported spider image from tomb for a use as a jungle enemy in future.
* corrected a missing * from the episode source for the castle.
* Added features to graphics editor for importing old qbasic graphics, mirroring images and basic rotation. It should get a help screen as well.

------------------------------------------------------------------------
r123 | andrew | 2021-10-15 16:37:22 +1100 (Fri, 15 Oct 2021) | 1 line

Finished Castl7 and added it to the castle episode. Now to make the last castle map.
------------------------------------------------------------------------
r122 | andrew | 2021-05-19 23:43:22 +1000 (Wed, 19 May 2021) | 1 line

completed and tested OPL2LPT support. Updated the interface elements and messages and added information to the readme.
------------------------------------------------------------------------
r121 | andrew | 2021-05-19 20:10:32 +1000 (Wed, 19 May 2021) | 1 line

Experimental OPL2LPT and OPL3LPT support added. Need to complete UI work to complete it.
------------------------------------------------------------------------
r120 | andrew | 2021-05-18 22:16:47 +1000 (Tue, 18 May 2021) | 1 line

Simplifying and shrinking adlib card support so that in future I can add support for the OPL3LPT and OPL2LPT.
------------------------------------------------------------------------
r119 | andrew | 2021-02-21 22:26:43 +1100 (Sun, 21 Feb 2021) | 1 line

re-wrote the joystick interface to work on older 286 machines without the AT BIOS part that does joystick support for you.
------------------------------------------------------------------------
r118 | andrew | 2021-02-09 14:00:38 +1100 (Tue, 09 Feb 2021) | 3 lines

removed debug info from the executables to save space now that the crashing bug is fixed.


------------------------------------------------------------------------
r117 | andrew | 2021-02-08 00:22:25 +1100 (Mon, 08 Feb 2021) | 8 lines

Finally found source of the most serious crash on real machines. It was caused by using 8087/80287 instructions during an interrupt with no actual NPU/FPU in the system.

The cure is to remove the 8087/80287 emulation and change the compiler to not generate instructions for the NPU/FPU. Some code where I was using the data type single had to be changed to real, which is ok as I mostly don't use the extra precision. 

This explains why it worked in dosbox (FPU is always enabled) and on more modern hardware (anything with a built in FPU).
Thanks to 86box for being the tool which enabled me to find this particularly tricky bug!

Now to figure out why I had decided to use the floating point instructions/emulation.
------------------------------------------------------------------------
r116 | andrew | 2021-01-02 12:00:40 +1100 (Sat, 02 Jan 2021) | 3 lines

Reorganised some files and deleted some test programs.
Also did some minor work on castl7.

------------------------------------------------------------------------
r115 | andrew | 2020-12-30 14:48:30 +1100 (Wed, 30 Dec 2020) | 6 lines

Made some changes to the engine
- removed head bonking to solve an issue with castl5, this makes navigating levels easier in general.
- changed distance calculation to use integer square root in the hope it will be faster on machine with no FPU
  I'm yet to test this, but will test it on the microbyte 386sx.


------------------------------------------------------------------------
r114 | andrew | 2020-06-21 22:26:46 +1000 (Sun, 21 Jun 2020) | 2 lines

some work done on castle 7

------------------------------------------------------------------------
r113 | andrew | 2020-05-21 21:33:44 +1000 (Thu, 21 May 2020) | 2 lines

added health to castl6 and did more work on castl7. Minor changes to the engine.

------------------------------------------------------------------------
r112 | andrew | 2020-05-10 15:18:28 +1000 (Sun, 10 May 2020) | 1 line

Changes to the readme before making a binary release
------------------------------------------------------------------------
r111 | andrew | 2020-05-09 17:49:06 +1000 (Sat, 09 May 2020) | 5 lines

- changed adlib detection mechanism so it isn't invoked if not needed (like if sound option is set to forces pc speaker or no sound)

- re-enabled the pitdbl unit but added command line switch to disable it.

Did serious amount of testing, still causes crashes, even when running newer dos (6.22). forcing the sound to be turned off still seems to be a cure, and bfleu seems to work with sound mysteriously.
------------------------------------------------------------------------
r110 | andrew | 2020-05-09 15:35:26 +1000 (Sat, 09 May 2020) | 2 lines

Fixed a bug in bmenu causing the player to start in an incorrect location
and reduced stack usage where I could.
------------------------------------------------------------------------
r109 | andrew | 2020-05-08 00:25:52 +1000 (Fri, 08 May 2020) | 5 lines

Made the default stack size smaller, and reduced the footprint some functions have on the stack.
Also found that the far call model is not needed for interrupt procedures, so moved all force far call model directives to
procedures that require it.

Found bfleu.exe works on the 386 machine, so hopefully we can use that to determine the problem.
------------------------------------------------------------------------
r108 | andrew | 2020-05-06 20:55:26 +1000 (Wed, 06 May 2020) | 2 lines

Refactored the map unit so internal levels are now called tiers to avoid confusion and make it clear which unit is being used when llist is also used.

------------------------------------------------------------------------
r107 | andrew | 2020-05-04 21:52:06 +1000 (Mon, 04 May 2020) | 4 lines

added debug data to executable whilst using turbo debug
found bobtest was using getlevel from map unit instead of llist. need to refactor map so that it doesn't share 
function names with llist

------------------------------------------------------------------------
r106 | andrew | 2020-05-03 19:10:09 +1000 (Sun, 03 May 2020) | 2 lines

added some range checking to some functions in the map unit to correct some issues flagged by range checking $R+ compile option
Hopefully this will make it possible to debug it better on real hardware.
------------------------------------------------------------------------
r105 | andrew | 2020-03-16 22:14:08 +1100 (Mon, 16 Mar 2020) | 1 line

made some changes to attempt to debug crashing issue on 386sx microbyte machine... no success so far.
------------------------------------------------------------------------
r104 | andrew | 2020-01-18 14:35:29 +1100 (Sat, 18 Jan 2020) | 3 lines

more attempts at fixing the problem!
- changed timing calculations in both fmplayer and music, slightly simpler design that checks with pitdbl.pas what constant to use.
- changed pitdbl.pas so that it is disabled by default, but can be enabled on demand. (mostly for testing!)
------------------------------------------------------------------------
r103 | andrew | 2020-01-16 01:24:57 +1100 (Thu, 16 Jan 2020) | 5 lines

Attempted to fix a bug on actual hardware causing machine lockups.
- changed the ack to the PIC being before int 1C instead of after
- changed both music and fmplayer so that they only hook the int 1C after being started (for fmplayer) or used for music.pas
- modified the bsound to initialise the sound device
- fixed loading custom maps from the command line.
------------------------------------------------------------------------
r102 | andrew | 2020-01-05 19:54:10 +1100 (Sun, 05 Jan 2020) | 3 lines

made some changes to the readme and old levels intro, also some work on castl7


------------------------------------------------------------------------
r101 | andrew | 2019-09-17 15:40:40 +1000 (Tue, 17 Sep 2019) | 5 lines

added some more controls to the music editor.
- can change channels up and down.
- can insert and delete notes.


------------------------------------------------------------------------
r100 | andrew | 2019-09-04 16:24:41 +1000 (Wed, 04 Sep 2019) | 2 lines

added some basic features: a status line and playing notes under the cursor.

------------------------------------------------------------------------
r99 | andrew | 2019-08-12 15:18:06 +1000 (Mon, 12 Aug 2019) | 2 lines

added pageup and pagedown keys to scroll through a channel quickly

------------------------------------------------------------------------
r98 | andrew | 2019-08-06 14:48:54 +1000 (Tue, 06 Aug 2019) | 2 lines

made a fix in Bmusic to the moveto function, and added a movable cursor. lots more to be done.

------------------------------------------------------------------------
r97 | andrew | 2019-08-05 08:48:49 +1000 (Mon, 05 Aug 2019) | 2 lines

minor change made before being able to work on my laptop

------------------------------------------------------------------------
r96 | andrew | 2019-07-30 13:32:49 +1000 (Tue, 30 Jul 2019) | 7 lines

Actually made a better start on a music editor. Decided to go back to text mode as it's easier. Have basic display of channel data but need to following...
* a movable cursor
* ability to move between pages.
* edit a note (and hear it)
* playback (of a single channel as well as the whole music)


------------------------------------------------------------------------
r95 | andrew | 2019-07-04 15:36:57 +1000 (Thu, 04 Jul 2019) | 2 lines

Some work on the 7th castle level.

------------------------------------------------------------------------
r94 | andrew | 2019-06-21 14:57:00 +1000 (Fri, 21 Jun 2019) | 3 lines

changed how projectiles are built so that I'll be able to make new types of projectile possibly with the same behaviour as existing ones.


------------------------------------------------------------------------
r93 | andrew | 2019-06-18 10:34:54 +1000 (Tue, 18 Jun 2019) | 2 lines

Started making level 7 for the castle episode, also minor changes to level 6.

------------------------------------------------------------------------
r92 | andrew | 2018-11-22 14:12:38 +1100 (Thu, 22 Nov 2018) | 2 lines

fixing some indentation.

------------------------------------------------------------------------
r91 | andrew | 2018-11-21 17:21:10 +1100 (Wed, 21 Nov 2018) | 2 lines

some code tidying and minor optimisation.

------------------------------------------------------------------------
r90 | andrew | 2018-11-20 15:50:06 +1100 (Tue, 20 Nov 2018) | 3 lines

converted all source using dos2unix to make editing easier, removed some uneeded source files. need to clean up the source.


------------------------------------------------------------------------
r89 | andrew | 2018-11-13 13:31:12 +1100 (Tue, 13 Nov 2018) | 2 lines

More graphical fixes that fix CGA and EGA graphics conversions.

------------------------------------------------------------------------
r88 | andrew | 2018-11-12 16:52:05 +1100 (Mon, 12 Nov 2018) | 2 lines

Fixed the player images for cga/ega mode. leg colour now doesn't change. Also changed the CGA palette to be a less harsh colour.

------------------------------------------------------------------------
r87 | andrew | 2018-07-27 15:46:04 +1000 (Fri, 27 Jul 2018) | 3 lines

play tested all the levels and added some health bottles to level 5


------------------------------------------------------------------------
r86 | andrew | 2018-07-23 14:42:20 +1000 (Mon, 23 Jul 2018) | 3 lines

created and tinkered with the readme files.


------------------------------------------------------------------------
r85 | andrew | 2018-07-16 17:34:23 +1000 (Mon, 16 Jul 2018) | 2 lines

castle 6 map added ready for play testing

------------------------------------------------------------------------
r84 | andrew | 2018-07-11 12:43:23 +1000 (Wed, 11 Jul 2018) | 3 lines

did some more work on the 6th castle level.


------------------------------------------------------------------------
r83 | andrew | 2018-06-14 15:59:26 +1000 (Thu, 14 Jun 2018) | 2 lines

tweaked castl6 and added arrows as decorative tiles to guide the player.

------------------------------------------------------------------------
r82 | andrew | 2018-06-13 17:44:36 +1000 (Wed, 13 Jun 2018) | 2 lines

did some work on the 6th castle level.

------------------------------------------------------------------------
r81 | andrew | 2018-05-07 11:54:37 +1000 (Mon, 07 May 2018) | 2 lines

Initial work of the 6th castle level and some other minor changes.

------------------------------------------------------------------------
r80 | andrew | 2017-04-07 14:01:33 +1000 (Fri, 07 Apr 2017) | 3 lines

added the option for compressing the map list and story text for each episode into one file.
Also had to make minor fixes to the decoder.

------------------------------------------------------------------------
r79 | andrew | 2017-03-15 13:41:37 +1100 (Wed, 15 Mar 2017) | 3 lines

minor changes to the readme before updating the Zip file online


------------------------------------------------------------------------
r78 | andrew | 2017-01-10 17:10:06 +1100 (Tue, 10 Jan 2017) | 2 lines

added a unit that increases the PIT speed allowing for shorter notes in the music and fmplayer music systems. Adjusted some sound effects to match.

------------------------------------------------------------------------
r77 | andrew | 2017-01-09 11:46:33 +1100 (Mon, 09 Jan 2017) | 2 lines

made some minor changes to fire rate and added a cool-down/gap for the pop-up spikes.

------------------------------------------------------------------------
r76 | andrew | 2017-01-09 11:09:45 +1100 (Mon, 09 Jan 2017) | 3 lines

added check points to levels and added a delay between enemies ability to shoot. Tinkered with the sound system but no changes as of yet.


------------------------------------------------------------------------
r75 | andrew | 2016-10-19 16:06:34 +1100 (Wed, 19 Oct 2016) | 2 lines

added a check point system to the engine and graphically (fairly easy)... need to add check points to existing levels.

------------------------------------------------------------------------
r74 | andrew | 2015-12-07 16:52:54 +1100 (Mon, 07 Dec 2015) | 2 lines

created and tested compression (huffman coding) library for storing ASCII text.

------------------------------------------------------------------------
r73 | andrew | 2015-01-15 15:19:22 +1100 (Thu, 15 Jan 2015) | 6 lines

changed the PGS to include the graph initialisation code. Also made it have better error messages when graph doesn't work.
need to:
   try out the svga256m.bgi driver for speed, it does both 320x200 and 640x400
   think about including the litt.chr into the bobgraph unit (build the font into the exe).
   

------------------------------------------------------------------------
r72 | andrew | 2015-01-12 14:10:47 +1100 (Mon, 12 Jan 2015) | 2 lines

fixed a small problem in the info screen

------------------------------------------------------------------------
r71 | andrew | 2014-12-16 18:09:18 +1100 (Tue, 16 Dec 2014) | 2 lines

updated the joystick configuration screen and main configuration screen. Added saving of the joystick configuration to the file.

------------------------------------------------------------------------
r70 | andrew | 2014-12-03 23:50:38 +1100 (Wed, 03 Dec 2014) | 2 lines

fixed joystick configuration and controls... just need to save the configuration

------------------------------------------------------------------------
r69 | andrew | 2014-12-02 16:18:35 +1100 (Tue, 02 Dec 2014) | 2 lines

updating the joystick functions to include using 4 buttons and custom controls.

------------------------------------------------------------------------
r68 | andrew | 2014-11-12 14:43:58 +1100 (Wed, 12 Nov 2014) | 3 lines

added readme file for the sake of the binary release


------------------------------------------------------------------------
r67 | andrew | 2014-11-11 22:50:01 +1100 (Tue, 11 Nov 2014) | 1 line

made a minor comment change to document changes to the pgs.
------------------------------------------------------------------------
r66 | andrew | 2014-11-11 14:38:54 +1100 (Tue, 11 Nov 2014) | 2 lines

changed some of the episode text and removed macro hard from the intro sequence. All in preparation for a binary release.

------------------------------------------------------------------------
r65 | andrew | 2014-09-29 17:15:18 +1000 (Mon, 29 Sep 2014) | 2 lines

changed the sprite test screen to include a very basic benchmark for the number of sprites that can be rendered per second.

------------------------------------------------------------------------
r64 | andrew | 2014-08-01 15:54:03 +1000 (Fri, 01 Aug 2014) | 3 lines

Created the new packer program for the base graphics data files. repacked the graphics and saved a crap-ton of 
space. The testpack program is non functional (it hasn't been rebuilt) but everything else is functional.

------------------------------------------------------------------------
r63 | andrew | 2014-08-01 13:40:58 +1000 (Fri, 01 Aug 2014) | 4 lines

created a unit for creating the graphics files using the RLE compression recently created. Have adapted egaconv 
and cgaconv to use the new unit and tested the graphics data files that they create. It seems to be effective as 
it has roughly halved the size of the graphics data on disk.

------------------------------------------------------------------------
r62 | andrew | 2014-07-31 12:00:16 +1000 (Thu, 31 Jul 2014) | 1 line

Added compression capability to the packed graphics system unit which reads and displays the graphic pack files... now I need to compress the packed graphics files!
------------------------------------------------------------------------
r61 | andrew | 2014-07-29 10:43:24 +1000 (Tue, 29 Jul 2014) | 3 lines

Created map compression program (updates the format of map files) and comrpessed all the map files for the game 
and in the BFLEU folder.

------------------------------------------------------------------------
r60 | andrew | 2014-07-28 15:43:50 +1000 (Mon, 28 Jul 2014) | 3 lines

Modified the map unit to store level data in RLE format whilst retaining compatibility with the old raw format.
Saving in RLE format can be turned off at compile time with a define.

------------------------------------------------------------------------
r59 | andrew | 2014-07-21 23:02:29 +1000 (Mon, 21 Jul 2014) | 2 lines

created the RLEtest program to test the RLE unit.

------------------------------------------------------------------------
r58 | andrew | 2014-07-21 16:58:21 +1000 (Mon, 21 Jul 2014) | 2 lines

added a Run-Length Encoder/Decoder to the code base. Need to make a program to test it.

------------------------------------------------------------------------
r57 | andrew | 2014-05-06 15:05:22 +1000 (Tue, 06 May 2014) | 2 lines

saved some more time by creating a quick exit for the pickup function

------------------------------------------------------------------------
r56 | andrew | 2014-05-06 12:59:54 +1000 (Tue, 06 May 2014) | 4 lines

Added bonus for using all key holes and switches and modified code to be easier 
to maintain. Moved showscore call in the run function and drastically increased 
the number of max cycles available. 

------------------------------------------------------------------------
r55 | andrew | 2014-05-05 14:56:36 +1000 (Mon, 05 May 2014) | 2 lines

modified BFLEU map display to be neater and easier to maintain.

------------------------------------------------------------------------
r54 | andrew | 2014-05-01 19:45:20 +1000 (Thu, 01 May 2014) | 2 lines

fixed some problems with castl5 and made it a little easier by adding health.

------------------------------------------------------------------------
r53 | andrew | 2014-04-30 09:52:09 +1000 (Wed, 30 Apr 2014) | 2 lines

fixed bug where lightning bolts and grenades didn't carry over.

------------------------------------------------------------------------
r52 | andrew | 2014-04-29 15:23:15 +1000 (Tue, 29 Apr 2014) | 6 lines

completed level 5 (castle) ready for testing... I noted that the save system and 
episode list system working together make a bug where adding a level to an 
episode doesn't effect saved games. ie. If you saved in the last level after any 
addition (or removal) it still thinks you're on the last level. not sure if I'll 
fix that.

------------------------------------------------------------------------
r51 | andrew | 2014-04-06 18:06:23 +1000 (Sun, 06 Apr 2014) | 3 lines

work on level 5 of the castle episode moved on - main structure, enemies 
and triggers in place. Requires testing and pick ups added. 

------------------------------------------------------------------------
r50 | andrew | 2014-03-12 14:57:11 +1100 (Wed, 12 Mar 2014) | 2 lines

Fixed the behaviour of the elevator, it now behaves how I'd expect it to.

------------------------------------------------------------------------
r49 | andrew | 2014-03-11 13:42:42 +1100 (Tue, 11 Mar 2014) | 3 lines

did some tidying of code by using case in some places in the enging (maybe more places this is a good idea). Added the functionality for the 
elevator, works, but appears jerky. added triggers left display to the level editor.

------------------------------------------------------------------------
r48 | andrew | 2014-03-10 15:38:32 +1100 (Mon, 10 Mar 2014) | 2 lines

did some work on 5th castle level, and created the graphics for the up-coming elevator.

------------------------------------------------------------------------
r47 | andrew | 2014-03-10 13:44:03 +1100 (Mon, 10 Mar 2014) | 3 lines

changed the chennel selection for sound playback. It uses empty channels first, and if they all are busy it clears the least busy and then 
uses that.

------------------------------------------------------------------------
r46 | andrew | 2014-01-16 15:36:24 +1100 (Thu, 16 Jan 2014) | 2 lines

made some minor changes to the interface to make it more usable.

------------------------------------------------------------------------
r45 | andrew | 2014-01-16 13:03:49 +1100 (Thu, 16 Jan 2014) | 4 lines

completed fixing BFLEU problems, it now uses bobgraph and is compiled 
without adlib support (PC speaker only).


------------------------------------------------------------------------
r44 | andrew | 2014-01-11 22:04:06 +1100 (Sat, 11 Jan 2014) | 4 lines

modified bfleu to use bobgraph instead of raw graph... somehow it's 
causing a stack overflow.


------------------------------------------------------------------------
r43 | andrew | 2014-01-08 23:44:29 +1100 (Wed, 08 Jan 2014) | 1 line

fixed up the batch files for some new features.
------------------------------------------------------------------------
r42 | andrew | 2014-01-08 17:01:36 +1100 (Wed, 08 Jan 2014) | 4 lines

Reduced memory usage in a number of units, mostly by shortening string structs.
made BFLEU compile with adlib sound off, still need to fix the tester part.


------------------------------------------------------------------------
r41 | andrew | 2014-01-08 00:37:27 +1100 (Wed, 08 Jan 2014) | 1 line

Restructured the sound system to share the FMplayer Note structure. Created sound cache unit and used it to replace the fmmusic unit that was large and slow. Sndgen program created to generate the sound file.
------------------------------------------------------------------------
r40 | andrew | 2014-01-07 17:40:39 +1100 (Tue, 07 Jan 2014) | 3 lines

changed bmenu to use the in built move function instead of copymem in bsystem (now commented out)
changed bobgraph to no longer use bitmap object (saved a little code)
changed map memory allocation and removed some un-needed checking.
------------------------------------------------------------------------
r39 | andrew | 2013-12-29 23:06:38 +1100 (Sun, 29 Dec 2013) | 1 line

Added information about sprite size and memory usage to info screen, found I was using more memory than expected in PGS and corrected it. It's still using more ram, but I have reduced it.
------------------------------------------------------------------------
r38 | andrew | 2013-12-29 22:25:26 +1100 (Sun, 29 Dec 2013) | 1 line

Saved some bytes of data segment that were not needed (some moved to stack) and added some comments.
------------------------------------------------------------------------
r37 | andrew | 2013-12-29 13:26:52 +1100 (Sun, 29 Dec 2013) | 1 line

added CGA colour translation to the high score display and general UI. also debugged and tweaked the CGA colour sprite converter.
------------------------------------------------------------------------
r36 | andrew | 2013-12-28 22:19:55 +1100 (Sat, 28 Dec 2013) | 1 line

Added CGA support! might need to tweak the converter for CGA sprites tho. Changed how the graphics mode is set/stored in bobgraph.
------------------------------------------------------------------------
r35 | andrew | 2013-12-22 21:25:11 +1100 (Sun, 22 Dec 2013) | 1 line

reduced the usage of getObjectAt in the Engine unit by using some stack space. Saved about 1000 bytes code! May also be faster?
------------------------------------------------------------------------
r34 | andrew | 2013-12-22 01:09:14 +1100 (Sun, 22 Dec 2013) | 1 line

added page flipping and detection to EGA mode. It simply has a page for the game screen and another for menus to make transition between menu and game faster.
------------------------------------------------------------------------
r33 | andrew | 2013-12-21 23:27:56 +1100 (Sat, 21 Dec 2013) | 1 line

Made EGA mode preference saved in config, and fixed some issues with the game menu and game area display system. The screen doesn't flicker to the game screen during menu operations such as starting a new game or loading a game.
------------------------------------------------------------------------
r32 | andrew | 2013-12-19 17:00:36 +1100 (Thu, 19 Dec 2013) | 3 lines

changed configuration screen to not show memory and sound information, added
a secret information screen (press I) for information on graphics etc.

------------------------------------------------------------------------
r31 | andrew | 2013-12-18 11:35:03 +1100 (Wed, 18 Dec 2013) | 3 lines

finished off adding the key cards into the game and made some changes to
 the engine and bobgraph in the hope of getting a few more cycles.

------------------------------------------------------------------------
r30 | andrew | 2013-12-17 17:01:55 +1100 (Tue, 17 Dec 2013) | 3 lines

created the artwork for green and red keys, put them in the pack files and
prepared bfleu for using the new items... just need to update the engine.

------------------------------------------------------------------------
r29 | andrew | 2013-12-17 15:25:59 +1100 (Tue, 17 Dec 2013) | 4 lines

Made custom buttons for the health, grenades and weapon select work better.
You now no longer have multiple health bottles or grenades used for short
keypresses, and selecting weapon is easier.

------------------------------------------------------------------------
r28 | andrew | 2013-12-17 13:46:04 +1100 (Tue, 17 Dec 2013) | 1 line

Changes made so palette is zeroed whilst loading under VGA and SVGA... will have to investigate similar procedure for EGA?
------------------------------------------------------------------------
r27 | andrew | 2013-04-10 21:28:48 +1000 (Wed, 10 Apr 2013) | 1 line

Created default compiler configuration (tpc.cfg) modify for changes that affect all code.
------------------------------------------------------------------------
r26 | andrew | 2013-04-10 12:44:14 +1000 (Wed, 10 Apr 2013) | 2 lines

removed some compiler defines that were un-needed.

------------------------------------------------------------------------
r25 | andrew | 2013-04-10 12:09:52 +1000 (Wed, 10 Apr 2013) | 4 lines

changed the compile options (like 286 instructions) to be in source 
code.


------------------------------------------------------------------------
r24 | andrew | 2013-04-09 16:54:43 +1000 (Tue, 09 Apr 2013) | 4 lines

Added a copy of the standard VGA palette into the executable so that 
the colour looks right on cards that do not have the correct palette on 
board.

------------------------------------------------------------------------
r23 | andrew | 2013-03-25 14:22:40 +1100 (Mon, 25 Mar 2013) | 3 lines

Added a special unit that does buffered reading on text files, modified 
important units to incorporate the buffered reader/writer.

------------------------------------------------------------------------
r22 | andrew | 2012-08-28 15:26:07 +1000 (Tue, 28 Aug 2012) | 2 lines

Added some code to work out the relative (vertical) position of a note

------------------------------------------------------------------------
r21 | andrew | 2012-08-28 13:04:50 +1000 (Tue, 28 Aug 2012) | 2 lines

In progress of making the functions for drawing the notes!

------------------------------------------------------------------------
r20 | andrew | 2012-06-25 16:09:00 +1000 (Mon, 25 Jun 2012) | 2 lines

added the procedure for making new BFM files.

------------------------------------------------------------------------
r19 | andrew | 2012-06-24 17:07:38 +1000 (Sun, 24 Jun 2012) | 1 line

Started on the editor... added some of the important utility functions!
------------------------------------------------------------------------
r18 | andrew | 2012-06-23 23:56:06 +1000 (Sat, 23 Jun 2012) | 1 line

created IBK and SBI file reader unit, and created the graphics for a music editor.
------------------------------------------------------------------------
r17 | andrew | 2012-03-13 20:49:42 +1100 (Tue, 13 Mar 2012) | 1 line

begun level 5 - the tower - main basic structure created.
------------------------------------------------------------------------
r16 | andrew | 2012-02-12 20:35:47 +1100 (Sun, 12 Feb 2012) | 2 lines

Added EGA support to the main game (not the editor that still requires VGA)
I've created a vga to ega graphics converter that makes ega sprites like that of thexter. 
------------------------------------------------------------------------
r15 | andrew | 2011-11-20 16:31:30 +1100 (Sun, 20 Nov 2011) | 3 lines

Added custom key controls to the engine... - no functional but may need some tweaking. esp for keys like drop grenade and change weapon.


------------------------------------------------------------------------
r14 | andrew | 2011-11-18 23:38:18 +1100 (Fri, 18 Nov 2011) | 2 lines

added custom key information to the configuration files - not compatible with old versions

------------------------------------------------------------------------
r13 | andrew | 2011-11-15 23:33:28 +1100 (Tue, 15 Nov 2011) | 3 lines

Added custom keyboard into the menus - still requires adding to engine and config file.


------------------------------------------------------------------------
r12 | andrew | 2011-10-27 00:04:38 +1100 (Thu, 27 Oct 2011) | 1 line

Finished and debugged keyboard unit - ready for integration into the engine.
------------------------------------------------------------------------
r11 | andrew | 2011-10-25 23:49:43 +1100 (Tue, 25 Oct 2011) | 1 line

Begun implementing keyboard handler for alternative and custom controls
------------------------------------------------------------------------
r10 | andrew | 2011-10-08 21:14:24 +1100 (Sat, 08 Oct 2011) | 3 lines

Adjusted castl4 (it was too hard)


------------------------------------------------------------------------
r9 | andrew | 2011-10-06 14:36:40 +1100 (Thu, 06 Oct 2011) | 3 lines

Completed castl4 level


------------------------------------------------------------------------
r8 | andrew | 2011-09-26 23:39:03 +1000 (Mon, 26 Sep 2011) | 1 line

castl4 level complete... requires testing (might be too hard)
------------------------------------------------------------------------
r7 | andrew | 2011-09-25 23:13:04 +1000 (Sun, 25 Sep 2011) | 1 line

Castl4 level monsters treasure and structure complete ... requires some health bottles added.
------------------------------------------------------------------------
r6 | andrew | 2011-09-23 22:21:30 +1000 (Fri, 23 Sep 2011) | 1 line

Fixed a bug with the bomb creatures and the switch trigger when they die (explode) from contacting the player.
------------------------------------------------------------------------
r5 | andrew | 2011-09-23 22:05:07 +1000 (Fri, 23 Sep 2011) | 2 lines

level update castl4 (not complete)

------------------------------------------------------------------------
r4 | andrew | 2011-09-23 16:15:06 +1000 (Fri, 23 Sep 2011) | 2 lines

Continuing build of castl4 level

------------------------------------------------------------------------
r3 | andrew | 2011-09-22 21:16:17 +1000 (Thu, 22 Sep 2011) | 1 line

Building castl4 level (incomplete) and ignoring tpu files in source directory.
------------------------------------------------------------------------
r2 | andrew | 2011-09-01 02:10:21 +1000 (Thu, 01 Sep 2011) | 1 line


------------------------------------------------------------------------
r1 | andrew | 2011-09-01 01:58:45 +1000 (Thu, 01 Sep 2011) | 1 line

Initial svn commit
------------------------------------------------------------------------
